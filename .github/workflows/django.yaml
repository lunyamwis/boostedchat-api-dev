name: Django CI

on:
  push:
    branches: [ actions-test ]
    # branches: [ "*" ] 
  # pull_request:
  #   branches: [ "*" ]
  #   types: [opened, closed, reopened]

env:
  CELERY_BROKER_URL: redis://localhost:6379
  CELERY_RESULT_BACKEND: redis://localhost:6379
  OPENAI_API_KEY: ${{SECRETS.OPENAI_API_KEY}} 
  EMAIL_HOST_USER: ${{SECRETS.EMAIL_HOST_USER}}
  EMAIL_HOST_PASSWORD: ${{SECRETS.EMAIL_HOST_PASSWORD}}
  CHALLENGE_EMAIL: ${{SECRETS.CHALLENGE_EMAIL}}
  CHALLENGE_PASSWORD: ${{SECRETS.CHALLENGE_PASSWORD}}
  POSTGRES_DBNAME: ${{ secrets.STAGING_POSTGRES_DBNAME }}
  POSTGRES_USERNAME: ${{ secrets.STAGING_POSTGRES_USERNAME }}
  POSTGRES_PASSWORD: ${{ secrets.STAGING_POSTGRES_PASSWORD }}
  POSTGRES_HOST: ${{ secrets.STAGING_POSTGRES_HOST }}
  POSTGRES_PORT: 5432
  EMAIL_RECIPIENTS: "${{ secrets.EMAIL_HOST_USER }},${{ secrets.TECH_CHANNEL_EMAIL }}"
  API_BASE_URL: http://web:8000/api/v1
  CLIENT_ORG:  ${{ secrets.CLIENT_ORG}}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  SMTP_PORT: ${{ secrets.SMTP_PORT }}
  SMTP_HOST: ${{ secrets.SMTP_HOST }}
  MAILCHIMP_API_KEY: ${{ secrets.MAILCHIMP_API_KEY }}
  APP_URL: 'https://api.booksy.us.boostedchat.com'
  SCRAPPER_URL: 'http://127.0.0.1:8003'
  DOMAIN1: 'booksy.us'
  DOMAIN2: 'booksy.us'
  MQTT_URL: 'https://mqtt.booksy.us.boostedchat.com'
  SCRIPTING_URL: 'https://promptemplate.booksy.us.boostedchat.com'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    # - name: Run Tests
    #   run: |
    #     python manage.py test

    - name: Login To Docker Hub
      uses: docker/login-action@v3 # mr-smithers-excellent/docker-build-push@v4 # use existing coker action
      with:
        context: .
        # push: true
        # tags: lunyamwimages/boostedchat-api-dev:latest
        # registry: docker.io  
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }} 

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: lunyamwimages/boostedchatapi-dev:staging

    - name: Set up ssh agent
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.STAGING_DEPLOY_SSH_PRIVATE_KEY }}

    - name: Add server to known_hosts
      run: |
        ssh-keyscan -H 84.247.184.136 >> ~/.ssh/known_hosts

    - name: Test SSH connection
      run: |
        ssh -v ubuntu@84.247.184.136 'echo "I AM IN THE SERVER"'
      env:
        SSH_PRIVATE_KEY: ${{ secrets.STAGING_DEPLOY_SSH_PRIVATE_KEY }}
  
    - name: Pull latest image and builde docker on staging server
      run: |
       ssh ubuntu@84.247.184.136 'docker pull lunyamwimages/boostedchatapi-dev:staging && docker stop boostedchat-api-dev || true && docker rm boostedchat-api-dev || true && unset DOCKER_HOST && docker run -d --name boostedchat-api-dev -e CELERY_BROKER_URL=redis://localhost:6379 -e CELERY_RESULT_BACKEND=redis://localhost:6379 -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} -e MAILCHIMP_API_KEY=${{MAILCHIMP_API_KEY}} -e EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} -e EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} -e CHALLENGE_EMAIL=${{ secrets.CHALLENGE_EMAIL }} -e CHALLENGE_PASSWORD=${{ secrets.CHALLENGE_PASSWORD }} -e POSTGRES_DBNAME=${{ secrets.STAGING_POSTGRES_DBNAME }} -e POSTGRES_USERNAME=${{ secrets.STAGING_POSTGRES_USERNAME }} -e POSTGRES_PASSWORD=${{ secrets.STAGING_POSTGRES_PASSWORD }} -e POSTGRES_HOST=${{ secrets.STAGING_POSTGRES_HOST }} -e POSTGRES_PORT=5432 -e EMAIL_RECIPIENTS="${{ secrets.EMAIL_HOST_USER }},${{ secrets.TECH_CHANNEL_EMAIL }}" -e API_BASE_URL=http://web:8000/api/v1 -e CLIENT_ORG=${{ secrets.CLIENT_ORG }} -e SENTRY_DSN=${{ secrets.SENTRY_DSN }} -e SMTP_PORT=${{ secrets.SMTP_PORT }} -e SMTP_HOST=${{ secrets.SMTP_HOST }} -e APP_URL=https://api.booksy.us.boostedchat.com -e SCRAPPER_URL=http://127.0.0.1:8003 -e DOMAIN1=booksy.us -e DOMAIN2=booksy.us -e MQTT_URL=https://mqtt.booksy.us.boostedchat.com -e SCRIPTING_URL=https://promptemplate.booksy.us.boostedchat.com lunyamwimages/boostedchatapi-dev:staging'

      env:
        SSH_PRIVATE_KEY: ${{ secrets.STAGING_DEPLOY_SSH_PRIVATE_KEY }}